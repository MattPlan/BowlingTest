Game
	setPinsDown(x, y) 
		x appartient à [1, 2]
		y appartient à [0,10]

		Pour deux appels successifs à setPinsDown(x,y), si la somme des y dépasse 10 => BowlingException
		x peut prendre la valeur 2, si on a déjà eu un appel à setPinsDown sur cette Frame

		Après une exception, l'objet ne pas changer d'état, vérification avec un equals ? (Pas sûr que ça suffise s'il ne vérifie que l'adresse)

	reset()
		Plus d'information dans le frame après un appel à reset
		Pour le prochain appel de setPinsDown(x, y)
			x doit valoir 1
			Le cumul des y reprend à 0
	
		Reset() peut être appelée à tout moment, avant les appels à setPins, entre, ou après

	countRolls()	
		Renvoie [0, 2]
		Après un appel à setPinsDown(), renvoie 1 ...

	countPinsDown()
		Renvoie [0, 10]
		Après un appel à setPinsDown(), renvoie le cumul des y
		Après un appel à reset(), renvoie 0

	countPinsDown(x)
		x appartient à [1, 2]
		Renvoie [-1, 10]

		Avant un appel à setPinsDown(), renvoie -1
		Si le lancer x a eu lieu, renvoie le y associé

		Après un appel à reset, renvoie -1


	toString()
		Pour les objets de type NormalFrame, renvoie un string de longueur 2
		Pour les objest de type FinalFrame, renvoie un string de longueur 3

		Si un lancer n'est pas effectué, le caractère est une espace	
	
	getCumulativeScore()
		renvoie 0 avant le premier lancer
		renvoie un entier positif	


NormalFrame
	Constructeur(x)
		x appartient à [1,9]
	
	getFrameNumber()
		renvoie le numéro de la frame considérée

LastFrame
	Constructeur(x)
		x appartient est égal à 10

Detected Errors
	- SetPinsDown does not throw and error when called with y > 10 on first throw
	- LastFrameConstructor does not throw an error when called with n between 0 and 9
	- NormalFrame Constructor does not throw an error when called with n = 0, or n >= 10
	
